# pgsql service host & port
PG_IMAGEe:=postgres

# pgsql base configure
PGHOST?=$(DOCKER_IP)
PGDATABASE?=db
PGPASSWORD?=pwd
PGUSER?=user
PGPORT?=5432


# docker only where path is volume in to pgsql 
PG_DBPATH?=$(HOME)/.mf/db/pgsql#postgres database in local path
PG_NAME?=pgsql#postgres container name


####
#
#   initialize postgres database
#
####
ifeq ($(PGHOST),$(DOCKER_IP))
    $(call start_deamon,$(PG_NAME),$(PG_IMAGEe),, -e POSTGRES_PASSWORD=$(PGPASSWORD) -e POSTGRES_USER=$(PGUSER) -p 5432 -v $(PG_DBPATH):/var/lib/postgresql/data )
    PGPORT=$(call docker_port,$(PG_NAME),5432)
endif

###
#   check postgres port is open
###
$(shell $(call wait_port,$(PGHOST),$(PGPORT)))

####
#
# setup postgres database env
#
####

export PGHOST
export PGPASSWORD
export PGDATABASE
export PGUSER
export PGPORT

PGENV=-e PGHOST=$(PGHOST) -e PGUSER=$(PGUSER) -e PGPORT=$(PGPORT) -e PGPASSWORD=$(PGPASSWORD) 

###
#   create postgresql database
###
$(call start_cmd,$(PG_IMAGEe), createdb -E UTF8 -T template0 $(PGDATABASE) &>/dev/null,$(PGENV))


help::
	@echo 
	@echo 
	@echo 
	@echo =============== postgresql plugin ===============
	@echo -------------- env varable --------------
	@echo PGHOST                    - postgres host address
	@echo PGPORT                    - postgres host port
	@echo PGDATABASE                - postgres database
	@echo PGUSER                    - postgres user name
	@echo PGPASSWORD                - postgres user password
	@echo PG_DBPATH                 - postgres database volume path
	@echo PG_NAME                    - postgres host address
	@echo -------------- CMD --------------
	@echo pg_shell                  - run postgres shell
	@echo pg_bash                   - run /bin/bash on postgres env
	@echo pg_dropdb                 - remove database $(PGDATABASE)  or PGDATABASE 


pg_shell:IMAGE=$(PG_IMAGEe)
pg_shell:DK_ARGS=$(PGENV)
pg_shell:CMD=psql -d $(PGDATABASE) 
pg_shell:
	$(call run_cmd,$(IMAGE),$(CMD),$(DK_ARGS))

# pg_dropdb 
pg_dropdb:IMAGE=$(PG_IMAGEe)
pg_dropdb:DK_ARGS=$(PGENV)
pg_dropdb:CMD=dropdb $(PGDATABASE)
pg_dropdb:
	$(call run_cmd,$(IMAGE),$(CMD),$(DK_ARGS))

pg_bash:IMAGE=$(PG_IMAGEe)
pg_bash:DK_ARGS=$(PGENV)
pg_bash:CMD=/bin/bash
pg_bash:
	$(call run_cmd,$(IMAGE),$(CMD),$(DK_ARGS))

env::
	@echo PGHOST=$(PGHOST)
	@echo PGUSER=$(PGUSER)
	@echo PGPASSWORD=$(PGPASSWORD)
	@echo PGDATABASE=$(PGDATABASE)
	@echo PGPORT=$(PGPORT)
